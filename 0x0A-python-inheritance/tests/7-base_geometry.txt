check for coreect positve integer::
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 89)
	>>> bg.integer_validator("my_int", 12)

check for negative input::
	>>> bg.integer_validator("my_int", -6)
	Traceback (most recent call last):
	ValueError: my_int must be greater than 0
	
	>>> bg.integer_validator("width", -89)
	Traceback (most recent call last):
	ValueError: width must be greater than 0

check for string input::
	>>> bg.integer_validator("width", "ninja")
	Traceback (most recent call last):
	TypeError: width must be an integer

check for string None::
	>>> bg.integer_validator("width", None)
	Traceback (most recent call last):
	TypeError: width must be an integer

check for none string input for name::
	>>> bg.integer_validator(90, 89)
